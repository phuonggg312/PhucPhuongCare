@page "/doctors"
@using PhucPhuongCare.CoreBusiness.Models
@using PhucPhuongCare.UseCases.DoctorsUseCases
@inject IAdminViewAllDoctorsUseCase AdminViewAllDoctorsUseCase
@inject IAdminDeleteDoctorUseCase AdminDeleteDoctorUseCase
@inject NavigationManager NavigationManager

<PageTitle>Quản lý Bác sĩ</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>Quản lý Bác sĩ</h3>
    <button class="btn btn-primary" @onclick="GoToAddDoctorPage">Thêm Bác sĩ mới</button>
</div>

@if (allDoctors == null)
{
    <p><em>Đang tải dữ liệu...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Họ và tên</th>
                <th>Chuyên khoa</th>
                <th style="width: 220px;">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var doctor in allDoctors)
            {
                <tr>
                    <td>@doctor.FullName</td>
                    <td>@doctor.Specialty?.Name</td>
                    <td>
                        <button class="btn btn-sm btn-info" @onclick="() => GoToSchedulesPage(doctor.Id)">Lịch</button>
                        <button class="btn btn-sm btn-light" @onclick="() => GoToEditPage(doctor.Id)">Sửa</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteDoctor(doctor.Id)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Doctor>? allDoctors;

    protected override async Task OnInitializedAsync()
    {
        await LoadDoctors();
    }

    private async Task LoadDoctors()
    {
        var result = await AdminViewAllDoctorsUseCase.ExecuteAsync();
        allDoctors = result.ToList();
    }

    private void GoToAddDoctorPage()
    {
        NavigationManager.NavigateTo("/doctors/add");
    }

    private void GoToEditPage(int doctorId)
    {
        NavigationManager.NavigateTo($"/doctors/edit/{doctorId}");
    }

    // =============================================
    // HÀM MỚI ĐƯỢC THÊM VÀO
    // =============================================
    private void GoToSchedulesPage(int doctorId)
    {
        NavigationManager.NavigateTo($"/doctors/schedules/{doctorId}");
    }

    private async Task DeleteDoctor(int doctorId)
    {
        await AdminDeleteDoctorUseCase.ExecuteAsync(doctorId);
        await LoadDoctors();
    }
}